[{"/home/chad/Desktop/gratitude/src/index.js":"1","/home/chad/Desktop/gratitude/src/components/app/App.js":"2","/home/chad/Desktop/gratitude/src/components/calendar/calendar.js":"3","/home/chad/Desktop/gratitude/src/components/error/Error.js":"4","/home/chad/Desktop/gratitude/src/components/entry/entry.js":"5","/home/chad/Desktop/gratitude/src/components/header/header.js":"6","/home/chad/Desktop/gratitude/src/components/Utils/PublicOnlyRoute.js":"7","/home/chad/Desktop/gratitude/src/components/Utils/PrivateRoute.js":"8","/home/chad/Desktop/gratitude/src/components/About/About.js":"9","/home/chad/Desktop/gratitude/src/components/EditEntry/EditEntry.js":"10","/home/chad/Desktop/gratitude/src/services/token-service.js":"11","/home/chad/Desktop/gratitude/src/services/auth-api-service.js":"12","/home/chad/Desktop/gratitude/src/contexts/GratitudeContext.js":"13","/home/chad/Desktop/gratitude/src/services/idle-service.js":"14","/home/chad/Desktop/gratitude/src/routes/RegistrationPage/RegistrationPage.js":"15","/home/chad/Desktop/gratitude/src/routes/NotFoundPage/NotFoundPage.js":"16","/home/chad/Desktop/gratitude/src/routes/LoginPage/LoginPage.js":"17","/home/chad/Desktop/gratitude/src/config.js":"18","/home/chad/Desktop/gratitude/src/components/Utils/Utils.js":"19","/home/chad/Desktop/gratitude/src/components/RegistrationForm/RegistrationForm.js":"20","/home/chad/Desktop/gratitude/src/components/LoginForm/LoginForm.js":"21","/home/chad/Desktop/gratitude/src/services/gratitude-api-service.js":"22"},{"size":279,"mtime":1608835810646,"results":"23","hashOfConfig":"24"},{"size":1676,"mtime":1611957452307,"results":"25","hashOfConfig":"24"},{"size":1506,"mtime":1611271336464,"results":"26","hashOfConfig":"24"},{"size":501,"mtime":1608835699312,"results":"27","hashOfConfig":"24"},{"size":2644,"mtime":1611957335049,"results":"28","hashOfConfig":"24"},{"size":2825,"mtime":1609995771916,"results":"29","hashOfConfig":"24"},{"size":442,"mtime":1608836845784,"results":"30","hashOfConfig":"24"},{"size":572,"mtime":1608836845780,"results":"31","hashOfConfig":"24"},{"size":1360,"mtime":1609996546126,"results":"32","hashOfConfig":"24"},{"size":3210,"mtime":1611957229441,"results":"33","hashOfConfig":"24"},{"size":1603,"mtime":1608780167527,"results":"34","hashOfConfig":"24"},{"size":1731,"mtime":1608780419430,"results":"35","hashOfConfig":"24"},{"size":1648,"mtime":1611271058705,"results":"36","hashOfConfig":"24"},{"size":805,"mtime":1608780481549,"results":"37","hashOfConfig":"24"},{"size":647,"mtime":1608836571573,"results":"38","hashOfConfig":"24"},{"size":338,"mtime":1608836571553,"results":"39","hashOfConfig":"24"},{"size":782,"mtime":1611957252402,"results":"40","hashOfConfig":"24"},{"size":109,"mtime":1608780063980,"results":"41","hashOfConfig":"24"},{"size":1067,"mtime":1608836845784,"results":"42","hashOfConfig":"24"},{"size":2618,"mtime":1611957394529,"results":"43","hashOfConfig":"24"},{"size":1703,"mtime":1610059632373,"results":"44","hashOfConfig":"24"},{"size":1487,"mtime":1611011546229,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"627l0o",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/chad/Desktop/gratitude/src/index.js",[],["96","97"],"/home/chad/Desktop/gratitude/src/components/app/App.js",[],"/home/chad/Desktop/gratitude/src/components/calendar/calendar.js",["98","99"],"import React, { useContext, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n// import bootstrapPlugin from \"@fullcalendar/bootstrap\";\n// import EditEntry from \"../EditEntry/EditEntry\";\nimport \"./calendar.css\";\n\nimport GratitudeApiService from \"../../services/gratitude-api-service\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nimport GratitudeContext from \"../../contexts/GratitudeContext\";\n\nexport default function Calendar(props) {\n  useEffect(async () => {\n    const data = await GratitudeApiService.getGratitudes();\n    context.setGratitudes(data);\n  }, []);\n  // const [showEditEntry, setShowEditEntry] = useState(false);\n  const context = useContext(GratitudeContext);\n  const handleClick = (data) => {\n    console.log(data);\n    props.history.push(\"/gratitude/\" + data.event._def.publicId);\n  };\n\n  console.log(props.gratitudes);\n  const events = context.gratitudes.map((gratitude) => {\n    return {\n      id: gratitude.id,\n      title: gratitude.thankful_for,\n      date: gratitude.date_created,\n    };\n  });\n\n  return (\n    <div className=\"calendar\">\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        themeSystem=\"bootstrap\"\n        initialView=\"dayGridMonth\"\n        events={events}\n        eventClick={handleClick}\n        displayEventTime={false}\n      />\n    </div>\n  );\n}\n","/home/chad/Desktop/gratitude/src/components/error/Error.js",[],"/home/chad/Desktop/gratitude/src/components/entry/entry.js",["100","101"],"import React, { useState, useContext } from \"react\";\nimport \"./entry.css\";\nimport TokenService from \"../../services/token-service\";\n\nconst Entry = (props) => {\n  const [thankful_for, setThankfulFor] = useState(\"\");\n  const [did_well, setDidWell] = useState(\"\");\n  const [achieve, setAchieve] = useState(\"\");\n  const [soc, setSoc] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { thankful_for, did_well, achieve, soc };\n      const response = await fetch(\"http://localhost:8000/api/gratitudes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `bearer ${TokenService.getAuthToken()}`,\n        },\n        body: JSON.stringify(body),\n      });\n      props.setShowForm(false);\n      props.getGratitudes();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {props.showForm ? (\n        <div className=\"form-popup\" id=\"myForm\">\n          <form className=\"form-container\" onSubmit={onSubmitForm}>\n            <h1>Gratitude</h1>\n            <label>\n              <b>What are you thankful for?</b>\n            </label>\n            <textarea\n              id=\"thankful_for\"\n              value={thankful_for}\n              onChange={(e) => setThankfulFor(e.target.value)}\n              required\n            />\n            <label>\n              <b>What did you do well today?</b>\n            </label>\n            <textarea\n              id=\"did_well\"\n              value={did_well}\n              onChange={(e) => setDidWell(e.target.value)}\n              required\n            />\n            <label>\n              <b>What do you hope to achieve tomorrow?</b>\n            </label>\n            <textarea\n              id=\"achieve\"\n              value={achieve}\n              onChange={(e) => setAchieve(e.target.value)}\n              required\n            />\n            <label>\n              <b>Stream of consciousness:</b>\n            </label>\n            <textarea value={soc} onChange={(e) => setSoc(e.target.value)} />\n            <button type=\"submit\" className=\"btn\">\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn cancel\"\n              onClick={(e) => props.setShowForm(false)}\n            >\n              Close\n            </button>\n          </form>\n        </div>\n      ) : (\n        <button\n          className=\"btn\"\n          id=\"new-gratitude\"\n          onClick={(e) => props.setShowForm(true)}\n        >\n          Add New Gratitude\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Entry;\n","/home/chad/Desktop/gratitude/src/components/header/header.js",[],"/home/chad/Desktop/gratitude/src/components/Utils/PublicOnlyRoute.js",[],"/home/chad/Desktop/gratitude/src/components/Utils/PrivateRoute.js",[],"/home/chad/Desktop/gratitude/src/components/About/About.js",[],"/home/chad/Desktop/gratitude/src/components/EditEntry/EditEntry.js",["102","103","104","105"],"import React, { useState, useEffect } from \"react\";\nimport \"./EditEntry.css\";\n\nconst EditEntry = (props) => {\n  useEffect(async () => {\n    const response = await fetch(\n      `http://localhost:8000/api/gratitudes/${props.match.params.id}`,\n      {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const data = await response.json();\n    console.log(response);\n    setThankfulFor(data.thankful_for);\n    setDidWell(data.did_well);\n    setAchieve(data.achieve);\n    setSoc(data.soc);\n  }, []);\n\n  const [thankful_for, setThankfulFor] = useState(\"\");\n  const [did_well, setDidWell] = useState(\"\");\n  const [achieve, setAchieve] = useState(\"\");\n  const [soc, setSoc] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { thankful_for, did_well, achieve, soc };\n      const response = await fetch(\n        `http://localhost:8000/api/gratitudes/${props.match.params.id}`,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n\n      window.location = \"/gratitude\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteGratitude = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/gratitudes/${props.match.params.id}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n\n      window.location = \"/gratitude\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"form-popup\" id=\"myForm\">\n        <form className=\"form-container\" onSubmit={onSubmitForm}>\n          <h1>Gratitude</h1>\n          <label>\n            <b>What are you thankful for?</b>\n          </label>\n          <textarea\n            id=\"thankful_for\"\n            value={thankful_for}\n            onChange={(e) => setThankfulFor(e.target.value)}\n            required\n          />\n          <label>\n            <b>What did you do well today?</b>\n          </label>\n          <textarea\n            id=\"did_well\"\n            value={did_well}\n            onChange={(e) => setDidWell(e.target.value)}\n            required\n          />\n          <label>\n            <b>What do you hope to achieve tomorrow?</b>\n          </label>\n          <textarea\n            id=\"achieve\"\n            value={achieve}\n            onChange={(e) => setAchieve(e.target.value)}\n            required\n          />\n          <label>\n            <b>Stream of consciousness:</b>\n          </label>\n          <textarea value={soc} onChange={(e) => setSoc(e.target.value)} />\n          <button type=\"submit\" className=\"btn\">\n            Save\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn delete\"\n            id=\"delete\"\n            onClick={deleteGratitude}\n          >\n            Delete\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn cancel\"\n            onClick={(e) => props.history.push(\"/gratitude\")}\n          >\n            Close\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditEntry;\n","/home/chad/Desktop/gratitude/src/services/token-service.js",[],"/home/chad/Desktop/gratitude/src/services/auth-api-service.js",[],["106","107"],"/home/chad/Desktop/gratitude/src/contexts/GratitudeContext.js",[],"/home/chad/Desktop/gratitude/src/services/idle-service.js",[],"/home/chad/Desktop/gratitude/src/routes/RegistrationPage/RegistrationPage.js",[],"/home/chad/Desktop/gratitude/src/routes/NotFoundPage/NotFoundPage.js",[],"/home/chad/Desktop/gratitude/src/routes/LoginPage/LoginPage.js",[],"/home/chad/Desktop/gratitude/src/config.js",["108"],"export default {\n  API_ENDPOINT: \"http://localhost:8000/api\",\n  TOKEN_KEY: \"gratitude-client-auth-token\",\n};\n","/home/chad/Desktop/gratitude/src/components/Utils/Utils.js",[],"/home/chad/Desktop/gratitude/src/components/RegistrationForm/RegistrationForm.js",[],"/home/chad/Desktop/gratitude/src/components/LoginForm/LoginForm.js",[],"/home/chad/Desktop/gratitude/src/services/gratitude-api-service.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":17,"column":13,"nodeType":"115","endLine":20,"endColumn":4},{"ruleId":"113","severity":1,"message":"116","line":20,"column":6,"nodeType":"117","endLine":20,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":37},{"ruleId":"119","severity":1,"message":"123","line":15,"column":13,"nodeType":"121","messageId":"122","endLine":15,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":5,"column":13,"nodeType":"115","endLine":19,"endColumn":4},{"ruleId":"113","severity":1,"message":"124","line":19,"column":6,"nodeType":"117","endLine":19,"endColumn":8,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"123","line":30,"column":13,"nodeType":"121","messageId":"122","endLine":30,"endColumn":21},{"ruleId":"119","severity":1,"message":"123","line":48,"column":13,"nodeType":"121","messageId":"122","endLine":48,"endColumn":21},{"ruleId":"109","replacedBy":"126"},{"ruleId":"111","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":1,"nodeType":"130","endLine":4,"endColumn":3},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["133"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["134"],["131"],["132"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [context]",{"range":"139","text":"140"},"Update the dependencies array to be: [props.match.params.id]",{"range":"141","text":"142"},[747,749],"[context]",[538,540],"[props.match.params.id]"]