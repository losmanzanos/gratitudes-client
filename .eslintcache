[{"/home/chad/Desktop/gratitude/src/index.js":"1","/home/chad/Desktop/gratitude/src/components/app/App.js":"2","/home/chad/Desktop/gratitude/src/components/calendar/calendar.js":"3","/home/chad/Desktop/gratitude/src/components/error/Error.js":"4","/home/chad/Desktop/gratitude/src/components/entry/entry.js":"5","/home/chad/Desktop/gratitude/src/components/header/header.js":"6","/home/chad/Desktop/gratitude/src/components/Utils/PublicOnlyRoute.js":"7","/home/chad/Desktop/gratitude/src/components/Utils/PrivateRoute.js":"8","/home/chad/Desktop/gratitude/src/components/About/About.js":"9","/home/chad/Desktop/gratitude/src/components/EditEntry/EditEntry.js":"10","/home/chad/Desktop/gratitude/src/services/token-service.js":"11","/home/chad/Desktop/gratitude/src/services/auth-api-service.js":"12","/home/chad/Desktop/gratitude/src/contexts/GratitudeContext.js":"13","/home/chad/Desktop/gratitude/src/services/idle-service.js":"14","/home/chad/Desktop/gratitude/src/routes/RegistrationPage/RegistrationPage.js":"15","/home/chad/Desktop/gratitude/src/routes/NotFoundPage/NotFoundPage.js":"16","/home/chad/Desktop/gratitude/src/routes/LoginPage/LoginPage.js":"17","/home/chad/Desktop/gratitude/src/config.js":"18","/home/chad/Desktop/gratitude/src/components/Utils/Utils.js":"19","/home/chad/Desktop/gratitude/src/components/RegistrationForm/RegistrationForm.js":"20","/home/chad/Desktop/gratitude/src/components/LoginForm/LoginForm.js":"21","/home/chad/Desktop/gratitude/src/services/gratitude-api-service.js":"22"},{"size":279,"mtime":1608835810646,"results":"23","hashOfConfig":"24"},{"size":1862,"mtime":1611270771673,"results":"25","hashOfConfig":"24"},{"size":1506,"mtime":1611271336464,"results":"26","hashOfConfig":"24"},{"size":501,"mtime":1608835699312,"results":"27","hashOfConfig":"24"},{"size":2816,"mtime":1611616362990,"results":"28","hashOfConfig":"24"},{"size":2825,"mtime":1609995771916,"results":"29","hashOfConfig":"24"},{"size":442,"mtime":1608836845784,"results":"30","hashOfConfig":"24"},{"size":572,"mtime":1608836845780,"results":"31","hashOfConfig":"24"},{"size":1360,"mtime":1609996546126,"results":"32","hashOfConfig":"24"},{"size":3210,"mtime":1609994743187,"results":"33","hashOfConfig":"24"},{"size":1603,"mtime":1608780167527,"results":"34","hashOfConfig":"24"},{"size":1731,"mtime":1608780419430,"results":"35","hashOfConfig":"24"},{"size":1648,"mtime":1611271058705,"results":"36","hashOfConfig":"24"},{"size":805,"mtime":1608780481549,"results":"37","hashOfConfig":"24"},{"size":647,"mtime":1608836571573,"results":"38","hashOfConfig":"24"},{"size":338,"mtime":1608836571553,"results":"39","hashOfConfig":"24"},{"size":855,"mtime":1611271136661,"results":"40","hashOfConfig":"24"},{"size":109,"mtime":1608780063980,"results":"41","hashOfConfig":"24"},{"size":1067,"mtime":1608836845784,"results":"42","hashOfConfig":"24"},{"size":2629,"mtime":1611270163739,"results":"43","hashOfConfig":"24"},{"size":1703,"mtime":1610059632373,"results":"44","hashOfConfig":"24"},{"size":1487,"mtime":1611011546229,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"627l0o",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/chad/Desktop/gratitude/src/index.js",[],["98","99"],"/home/chad/Desktop/gratitude/src/components/app/App.js",["100","101","102","103"],"import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"../header/header\";\nimport Calendar from \"../calendar/calendar\";\nimport Entry from \"../entry/entry\";\nimport GratitudeError from \"../error/Error\";\nimport EditEntry from \"../EditEntry/EditEntry\";\nimport About from \"../About/About\";\n\nimport PublicOnlyRoute from \"../Utils/PublicOnlyRoute\";\nimport PrivateRoute from \"../Utils/PrivateRoute\";\n\nimport LoginPage from \"../../routes/LoginPage/LoginPage\";\nimport RegistrationPage from \"../../routes/RegistrationPage/RegistrationPage\";\nimport NotFoundPage from \"../../routes/NotFoundPage/NotFoundPage\";\n\nimport TokenService from \"../../services/token-service\";\nimport AuthApiService from \"../../services/auth-api-service\";\nimport IdleService from \"../../services/idle-service\";\n\nimport { GratitudeProvider } from \"../../contexts/GratitudeContext\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n\n  return (\n    <GratitudeError>\n      <GratitudeProvider>\n        <div className=\"App\">\n          <Header />\n\n          <Switch>\n            <Route exact path=\"/\" component={About} />\n            <Route path=\"/gratitude/:id\" component={EditEntry} />\n            <PublicOnlyRoute path=\"/login\" component={LoginPage} />\n            <PublicOnlyRoute path=\"/register\" component={RegistrationPage} />\n            <PrivateRoute\n              path=\"/gratitude\"\n              component={(routerprops) => (\n                <div>\n                  <Calendar history={routerprops.history} />\n                  <Entry showForm={showForm} setShowForm={setShowForm} />\n                </div>\n              )}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </GratitudeProvider>\n    </GratitudeError>\n  );\n}\n\nexport default App;\n","/home/chad/Desktop/gratitude/src/components/calendar/calendar.js",["104","105"],"import React, { useContext, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n// import bootstrapPlugin from \"@fullcalendar/bootstrap\";\n// import EditEntry from \"../EditEntry/EditEntry\";\nimport \"./calendar.css\";\n\nimport GratitudeApiService from \"../../services/gratitude-api-service\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nimport GratitudeContext from \"../../contexts/GratitudeContext\";\n\nexport default function Calendar(props) {\n  useEffect(async () => {\n    const data = await GratitudeApiService.getGratitudes();\n    context.setGratitudes(data);\n  }, []);\n  // const [showEditEntry, setShowEditEntry] = useState(false);\n  const context = useContext(GratitudeContext);\n  const handleClick = (data) => {\n    console.log(data);\n    props.history.push(\"/gratitude/\" + data.event._def.publicId);\n  };\n\n  console.log(props.gratitudes);\n  const events = context.gratitudes.map((gratitude) => {\n    return {\n      id: gratitude.id,\n      title: gratitude.thankful_for,\n      date: gratitude.date_created,\n    };\n  });\n\n  return (\n    <div className=\"calendar\">\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        themeSystem=\"bootstrap\"\n        initialView=\"dayGridMonth\"\n        events={events}\n        eventClick={handleClick}\n        displayEventTime={false}\n      />\n    </div>\n  );\n}\n","/home/chad/Desktop/gratitude/src/components/error/Error.js",[],"/home/chad/Desktop/gratitude/src/components/entry/entry.js",["106","107","108"],"import React, { useState, useContext } from \"react\";\nimport \"./entry.css\";\n\nimport TokenService from \"../../services/token-service\";\n\nimport GratitudeContext, {\n  GratitudeProvider,\n} from \"../../contexts/GratitudeContext\";\n\nconst Entry = (props) => {\n  const context = useContext(GratitudeProvider);\n\n  const [thankful_for, setThankfulFor] = useState(\"\");\n  const [did_well, setDidWell] = useState(\"\");\n  const [achieve, setAchieve] = useState(\"\");\n  const [soc, setSoc] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { thankful_for, did_well, achieve, soc };\n      const response = await fetch(\"http://localhost:8000/api/gratitudes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `bearer ${TokenService.getAuthToken()}`,\n        },\n        body: JSON.stringify(body),\n      });\n      props.setShowForm(false);\n      props.getGratitudes();\n\n      // props.history.push;\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {props.showForm ? (\n        <div className=\"form-popup\" id=\"myForm\">\n          <form className=\"form-container\" onSubmit={onSubmitForm}>\n            <h1>Gratitude</h1>\n            <label>\n              <b>What are you thankful for?</b>\n            </label>\n            <textarea\n              id=\"thankful_for\"\n              value={thankful_for}\n              onChange={(e) => setThankfulFor(e.target.value)}\n              required\n            />\n            <label>\n              <b>What did you do well today?</b>\n            </label>\n            <textarea\n              id=\"did_well\"\n              value={did_well}\n              onChange={(e) => setDidWell(e.target.value)}\n              required\n            />\n            <label>\n              <b>What do you hope to achieve tomorrow?</b>\n            </label>\n            <textarea\n              id=\"achieve\"\n              value={achieve}\n              onChange={(e) => setAchieve(e.target.value)}\n              required\n            />\n            <label>\n              <b>Stream of consciousness:</b>\n            </label>\n            <textarea value={soc} onChange={(e) => setSoc(e.target.value)} />\n            <button type=\"submit\" className=\"btn\">\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn cancel\"\n              onClick={(e) => props.setShowForm(false)}\n            >\n              Close\n            </button>\n          </form>\n        </div>\n      ) : (\n        <button\n          className=\"btn\"\n          id=\"new-gratitude\"\n          onClick={(e) => props.setShowForm(true)}\n        >\n          Add New Gratitude\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Entry;\n","/home/chad/Desktop/gratitude/src/components/header/header.js",[],"/home/chad/Desktop/gratitude/src/components/Utils/PublicOnlyRoute.js",[],"/home/chad/Desktop/gratitude/src/components/Utils/PrivateRoute.js",[],"/home/chad/Desktop/gratitude/src/components/About/About.js",[],"/home/chad/Desktop/gratitude/src/components/EditEntry/EditEntry.js",["109","110","111","112"],"import React, { useState, useEffect } from \"react\";\nimport \"./EditEntry.css\";\n\nconst EditEntry = (props) => {\n  useEffect(async () => {\n    const response = await fetch(\n      `http://localhost:8000/api/gratitudes/${props.match.params.id}`,\n      {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const data = await response.json();\n    console.log(response);\n    setThankfulFor(data.thankful_for);\n    setDidWell(data.did_well);\n    setAchieve(data.achieve);\n    setSoc(data.soc);\n  }, []);\n\n  const [thankful_for, setThankfulFor] = useState(\"\");\n  const [did_well, setDidWell] = useState(\"\");\n  const [achieve, setAchieve] = useState(\"\");\n  const [soc, setSoc] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { thankful_for, did_well, achieve, soc };\n      const response = await fetch(\n        `http://localhost:8000/api/gratitudes/${props.match.params.id}`,\n        {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n\n      window.location = \"/gratitude\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteGratitude = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `http://localhost:8000/api/gratitudes/${props.match.params.id}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n\n      window.location = \"/gratitude\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"form-popup\" id=\"myForm\">\n        <form className=\"form-container\" onSubmit={onSubmitForm}>\n          <h1>Gratitude</h1>\n          <label>\n            <b>What are you thankful for?</b>\n          </label>\n          <textarea\n            id=\"thankful_for\"\n            value={thankful_for}\n            onChange={(e) => setThankfulFor(e.target.value)}\n            required\n          />\n          <label>\n            <b>What did you do well today?</b>\n          </label>\n          <textarea\n            id=\"did_well\"\n            value={did_well}\n            onChange={(e) => setDidWell(e.target.value)}\n            required\n          />\n          <label>\n            <b>What do you hope to achieve tomorrow?</b>\n          </label>\n          <textarea\n            id=\"achieve\"\n            value={achieve}\n            onChange={(e) => setAchieve(e.target.value)}\n            required\n          />\n          <label>\n            <b>Stream of consciousness:</b>\n          </label>\n          <textarea value={soc} onChange={(e) => setSoc(e.target.value)} />\n          <button type=\"submit\" className=\"btn\">\n            Save\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn delete\"\n            id=\"delete\"\n            onClick={deleteGratitude}\n          >\n            Delete\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn cancel\"\n            onClick={(e) => props.history.push(\"/gratitude\")}\n          >\n            Close\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditEntry;\n","/home/chad/Desktop/gratitude/src/services/token-service.js",[],"/home/chad/Desktop/gratitude/src/services/auth-api-service.js",[],"/home/chad/Desktop/gratitude/src/contexts/GratitudeContext.js",[],"/home/chad/Desktop/gratitude/src/services/idle-service.js",[],"/home/chad/Desktop/gratitude/src/routes/RegistrationPage/RegistrationPage.js",[],"/home/chad/Desktop/gratitude/src/routes/NotFoundPage/NotFoundPage.js",[],"/home/chad/Desktop/gratitude/src/routes/LoginPage/LoginPage.js",["113"],"import React, { Component } from \"react\";\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\nimport { Section } from \"../../components/Utils/Utils\";\nimport GratitudeContext from \"../../contexts/GratitudeContext\";\n\nimport GratitudeApiService from \"../../services/gratitude-api-service\";\n\nexport default class LoginPage extends Component {\n  static contextType = GratitudeContext;\n\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    },\n  };\n\n  handleLoginSuccess = async () => {\n    const { location, history } = this.props;\n    const destination = (location.state || {}).from || \"/gratitude\";\n\n    history.push(destination);\n  };\n\n  render() {\n    return (\n      <Section className=\"LoginPage\">\n        <h2>Login</h2>\n        <LoginForm onLoginSuccess={this.handleLoginSuccess} />\n      </Section>\n    );\n  }\n}\n","/home/chad/Desktop/gratitude/src/config.js",["114"],"export default {\n  API_ENDPOINT: \"http://localhost:8000/api\",\n  TOKEN_KEY: \"gratitude-client-auth-token\",\n};\n","/home/chad/Desktop/gratitude/src/components/Utils/Utils.js",[],"/home/chad/Desktop/gratitude/src/components/RegistrationForm/RegistrationForm.js",["115"],"import React, { Component } from \"react\";\nimport { Button, Input, Required } from \"../Utils/Utils\";\nimport AuthApiService from \"../../services/auth-api-service\";\nimport \"./RegistrationForm.css\";\n\nimport GratitudeContext from \"../../contexts/GratitudeContext\";\n\nexport default class RegistrationForm extends Component {\n  static contextType = GratitudeContext;\n\n  static defaultProps = {\n    onRegistrationSuccess: () => {},\n  };\n\n  state = { error: null };\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    const { full_name, nick_name, user_name, password } = ev.target;\n\n    this.setState({ error: null });\n    AuthApiService.postUser({\n      user_name: user_name.value,\n      password: password.value,\n      full_name: full_name.value,\n      // nickname: nick_name.value,\n    })\n      .then((user) => {\n        this.context.setAuthToken(user.authtoken);\n        full_name.value = \"\";\n        // nick_name.value = \"\";\n        user_name.value = \"\";\n        password.value = \"\";\n        this.props.onRegistrationSuccess();\n      })\n      .catch((res) => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form className=\"RegistrationForm\" onSubmit={this.handleSubmit}>\n        <div role=\"alert\">{error && <p className=\"red\">{error}</p>}</div>\n        <div className=\"full_name\">\n          <label htmlFor=\"RegistrationForm__full_name\">\n            Full Name <Required />\n          </label>\n          <Input\n            name=\"full_name\"\n            type=\"text\"\n            required\n            id=\"RegistrationForm__full_name\"\n          ></Input>\n        </div>\n        <div className=\"user_name\">\n          <label htmlFor=\"RegistrationForm__user_name\">\n            Username <Required />\n          </label>\n          <Input\n            name=\"user_name\"\n            type=\"text\"\n            required\n            id=\"RegistrationForm__user_name\"\n          ></Input>\n        </div>\n        <div className=\"password\">\n          <label htmlFor=\"RegistrationForm__password\">\n            Password <Required />\n          </label>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            required\n            id=\"RegistrationForm__password\"\n          ></Input>\n        </div>\n        {/* <div className=\"nick_name\">\n          <label htmlFor=\"RegistrationForm__nick_name\">Nickname</label>\n          <Input\n            name=\"nick_name\"\n            type=\"text\"\n            id=\"RegistrationForm__nick_name\"\n          ></Input>\n        </div> */}\n        <Button className=\"btn-primary\">Register</Button>\n      </form>\n    );\n  }\n}\n","/home/chad/Desktop/gratitude/src/components/LoginForm/LoginForm.js",[],"/home/chad/Desktop/gratitude/src/services/gratitude-api-service.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":20,"nodeType":"122","messageId":"123","endLine":1,"endColumn":29},{"ruleId":"120","severity":1,"message":"124","line":18,"column":8,"nodeType":"122","messageId":"123","endLine":18,"endColumn":20},{"ruleId":"120","severity":1,"message":"125","line":19,"column":8,"nodeType":"122","messageId":"123","endLine":19,"endColumn":22},{"ruleId":"120","severity":1,"message":"126","line":20,"column":8,"nodeType":"122","messageId":"123","endLine":20,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":17,"column":13,"nodeType":"129","endLine":20,"endColumn":4},{"ruleId":"127","severity":1,"message":"130","line":20,"column":6,"nodeType":"131","endLine":20,"endColumn":8,"suggestions":"132"},{"ruleId":"120","severity":1,"message":"133","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":24},{"ruleId":"120","severity":1,"message":"134","line":11,"column":9,"nodeType":"122","messageId":"123","endLine":11,"endColumn":16},{"ruleId":"120","severity":1,"message":"135","line":22,"column":13,"nodeType":"122","messageId":"123","endLine":22,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":5,"column":13,"nodeType":"129","endLine":19,"endColumn":4},{"ruleId":"127","severity":1,"message":"136","line":19,"column":6,"nodeType":"131","endLine":19,"endColumn":8,"suggestions":"137"},{"ruleId":"120","severity":1,"message":"135","line":30,"column":13,"nodeType":"122","messageId":"123","endLine":30,"endColumn":21},{"ruleId":"120","severity":1,"message":"135","line":48,"column":13,"nodeType":"122","messageId":"123","endLine":48,"endColumn":21},{"ruleId":"120","severity":1,"message":"138","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":1,"column":1,"nodeType":"141","endLine":4,"endColumn":3},{"ruleId":"120","severity":1,"message":"142","line":19,"column":24,"nodeType":"122","messageId":"123","endLine":19,"endColumn":33},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'TokenService' is defined but never used.","'AuthApiService' is defined but never used.","'IdleService' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'GratitudeContext' is defined but never used.","'context' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["146"],"'GratitudeApiService' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'nick_name' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [context]",{"range":"151","text":"152"},"Update the dependencies array to be: [props.match.params.id]",{"range":"153","text":"154"},[747,749],"[context]",[538,540],"[props.match.params.id]"]